#!/usr/bin/perl
# Create a FASTA sequence from a multisample VCF file.
# The sequence is composed of only the variant sites.
# Written by Shaun Jackman.

use strict;
use Getopt::Std qw'getopts';

my %opt;
getopts 'q:v', \%opt;
my $opt_q = defined $opt{'q'} ? $opt{'q'} : 20;
my $opt_v = $opt{'v'};

# Remove duplicates from a list.
sub uniq {
    return keys %{{ map { $_ => 1 } @_ }};
}

# Call a consensus sequence.
sub consensus {
	my %x;
	for my $i (@_) {
		$x{$i}++;
	}
	(sort {$x{$b} <=> $x{$a} || $a cmp $b} keys %x)[0];
}

my @names;
my @seq;
while (<>) {
	if (/^#CHROM/) {
		# Extract the sample names.
		die unless @names == 0;
		@names = split;
		splice(@names, 0, 9);
		unshift @names, 'Reference', 'Consensus';
	}
	next if /^#/;

	my ($chrom, $refpos, $id, $refgt, $alt, $qual, $filter, $info,
		$format, @rest) = split;
	die unless $format =~ /^GT:..:GQ/;
	my @alts = split ',', "$refgt,$alt";

	# Convert indels to N.
	@alts = map { length $_ > 1 ? 'N' : $_ } @alts;

	my @genotypes = map {
		my ($gt, undef, $gq, undef) = split ':', $_, 4;
		my @alleles = uniq map { $alts[$_] } split '/', $gt;
        # Convert poor quality genoptypes and diploid calls to N.
		$gq < $opt_q || @alleles > 1 ? 'N' : @alleles;
	} @rest;

	# Skip locus where all samples agree, excluding Ns.
	my $ngenotypes = join('', uniq(@genotypes)) =~ tr/ACGT//;
	next if $ngenotypes < 2;

	unshift @genotypes, $alts[0], consensus(@genotypes);
	print STDERR $chrom, "\t", $refpos, "\t", @genotypes, "\n" if $opt_v;

	my $i = 0;
	for my $genotype (@genotypes) {
		$seq[$i++] .= $genotype;
	}
}

# Keep only the leading alphanumeric portion of the sample name.
@names = map { s/(^[A-Za-z0-9]*).*/\1/; $_ } @names;
die unless scalar @names == scalar @seq;

# Perform some QA.
for my $i (0 .. @names - 1) {
	my ($name, $s) = ($names[$i], $seq[$i]);
	my $numn = $s =~ tr/N//;
	my $len = length $s;
	# Check the proportion of N per sample.
	if ($numn / $len > 0.2) {
		print STDERR "Warning: `$name' is more than 20% N: $numn / $len = ", $numn / $len, "\n";
	}
}

# Output the FASTA file.
for my $i (0 .. @names - 1) {
	print '>', $names[$i], "\n", $seq[$i], "\n";
}
